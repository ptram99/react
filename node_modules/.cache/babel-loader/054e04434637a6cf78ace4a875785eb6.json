{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\~\\\\metaplex\\\\fair-launch\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useMemo } from 'react';\nimport Home from './Home';\nimport * as anchor from '@project-serum/anchor';\nimport { clusterApiUrl } from '@solana/web3.js';\nimport { getPhantomWallet, getSolflareWallet, getSolletWallet } from '@solana/wallet-adapter-wallets';\nimport { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react';\nimport { WalletDialogProvider } from '@solana/wallet-adapter-material-ui';\nimport { ThemeProvider, createTheme } from '@material-ui/core';\nimport { ConfettiProvider } from './confetti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    type: 'dark'\n  }\n});\nconst candyMachineId = process.env.REACT_APP_CANDY_MACHINE_ID ? new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_ID) : undefined;\nconst fairLaunchId = process.env.REACT_APP_FAIR_LAUNCH_ID ? new anchor.web3.PublicKey(process.env.REACT_APP_FAIR_LAUNCH_ID) : undefined;\nconst network = process.env.REACT_APP_SOLANA_NETWORK;\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST;\nconst connection = new anchor.web3.Connection(rpcHost);\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE, 10);\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\n\nconst App = () => {\n  _s();\n\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n  const wallets = useMemo(() => [getPhantomWallet(), getSolflareWallet(), getSolletWallet()], []);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(ConnectionProvider, {\n      endpoint: endpoint,\n      children: /*#__PURE__*/_jsxDEV(WalletProvider, {\n        wallets: wallets,\n        autoConnect: true,\n        children: /*#__PURE__*/_jsxDEV(WalletDialogProvider, {\n          children: /*#__PURE__*/_jsxDEV(ConfettiProvider, {\n            children: /*#__PURE__*/_jsxDEV(Home, {\n              candyMachineId: candyMachineId,\n              fairLaunchId: fairLaunchId,\n              connection: connection,\n              startDate: startDateSeed,\n              txTimeout: txTimeout,\n              rpcHost: rpcHost\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"RNaTq20PjYTGasfEtgZ8qKkPMD0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/User/~/metaplex/fair-launch/src/App.tsx"],"names":["useMemo","Home","anchor","clusterApiUrl","getPhantomWallet","getSolflareWallet","getSolletWallet","ConnectionProvider","WalletProvider","WalletDialogProvider","ThemeProvider","createTheme","ConfettiProvider","theme","palette","type","candyMachineId","process","env","REACT_APP_CANDY_MACHINE_ID","web3","PublicKey","undefined","fairLaunchId","REACT_APP_FAIR_LAUNCH_ID","network","REACT_APP_SOLANA_NETWORK","rpcHost","REACT_APP_SOLANA_RPC_HOST","connection","Connection","startDateSeed","parseInt","REACT_APP_CANDY_START_DATE","txTimeout","App","endpoint","wallets"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,OAAT,QAAwB,OAAxB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,uBAAxB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,SACEC,gBADF,EAEEC,iBAFF,EAGEC,eAHF,QAIO,gCAJP;AAMA,SACEC,kBADF,EAEEC,cAFF,QAGO,8BAHP;AAKA,SAASC,oBAAT,QAAqC,oCAArC;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,mBAA3C;AACA,SAASC,gBAAT,QAAiC,YAAjC;;AAEA,MAAMC,KAAK,GAAGF,WAAW,CAAC;AACxBG,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE;AADC;AADe,CAAD,CAAzB;AAMA,MAAMC,cAAc,GAAGC,OAAO,CAACC,GAAR,CAAYC,0BAAZ,GACnB,IAAIjB,MAAM,CAACkB,IAAP,CAAYC,SAAhB,CAA0BJ,OAAO,CAACC,GAAR,CAAYC,0BAAtC,CADmB,GAEnBG,SAFJ;AAIA,MAAMC,YAAY,GAAGN,OAAO,CAACC,GAAR,CAAYM,wBAAZ,GACjB,IAAItB,MAAM,CAACkB,IAAP,CAAYC,SAAhB,CAA0BJ,OAAO,CAACC,GAAR,CAAYM,wBAAtC,CADiB,GAEjBF,SAFJ;AAIA,MAAMG,OAAO,GAAGR,OAAO,CAACC,GAAR,CAAYQ,wBAA5B;AAEA,MAAMC,OAAO,GAAGV,OAAO,CAACC,GAAR,CAAYU,yBAA5B;AACA,MAAMC,UAAU,GAAG,IAAI3B,MAAM,CAACkB,IAAP,CAAYU,UAAhB,CAA2BH,OAA3B,CAAnB;AAEA,MAAMI,aAAa,GAAGC,QAAQ,CAACf,OAAO,CAACC,GAAR,CAAYe,0BAAb,EAA0C,EAA1C,CAA9B;AAEA,MAAMC,SAAS,GAAG,KAAlB,C,CAAyB;;AAEzB,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,QAAQ,GAAGpC,OAAO,CAAC,MAAMG,aAAa,CAACsB,OAAD,CAApB,EAA+B,EAA/B,CAAxB;AAEA,QAAMY,OAAO,GAAGrC,OAAO,CACrB,MAAM,CAACI,gBAAgB,EAAjB,EAAqBC,iBAAiB,EAAtC,EAA0CC,eAAe,EAAzD,CADe,EAErB,EAFqB,CAAvB;AAKA,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEO,KAAtB;AAAA,2BACE,QAAC,kBAAD;AAAoB,MAAA,QAAQ,EAAEuB,QAA9B;AAAA,6BACE,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAEC,OAAzB;AAAkC,QAAA,WAAW,MAA7C;AAAA,+BACE,QAAC,oBAAD;AAAA,iCACE,QAAC,gBAAD;AAAA,mCACE,QAAC,IAAD;AACE,cAAA,cAAc,EAAErB,cADlB;AAEE,cAAA,YAAY,EAAEO,YAFhB;AAGE,cAAA,UAAU,EAAEM,UAHd;AAIE,cAAA,SAAS,EAAEE,aAJb;AAKE,cAAA,SAAS,EAAEG,SALb;AAME,cAAA,OAAO,EAAEP;AANX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA5BD;;GAAMQ,G;;KAAAA,G;AA8BN,eAAeA,GAAf","sourcesContent":["import './App.css';\r\nimport { useMemo } from 'react';\r\n\r\nimport Home from './Home';\r\n\r\nimport * as anchor from '@project-serum/anchor';\r\nimport { clusterApiUrl } from '@solana/web3.js';\r\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\r\nimport {\r\n  getPhantomWallet,\r\n  getSolflareWallet,\r\n  getSolletWallet,\r\n} from '@solana/wallet-adapter-wallets';\r\n\r\nimport {\r\n  ConnectionProvider,\r\n  WalletProvider,\r\n} from '@solana/wallet-adapter-react';\r\n\r\nimport { WalletDialogProvider } from '@solana/wallet-adapter-material-ui';\r\nimport { ThemeProvider, createTheme } from '@material-ui/core';\r\nimport { ConfettiProvider } from './confetti';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n});\r\n\r\nconst candyMachineId = process.env.REACT_APP_CANDY_MACHINE_ID\r\n  ? new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_ID)\r\n  : undefined;\r\n\r\nconst fairLaunchId = process.env.REACT_APP_FAIR_LAUNCH_ID\r\n  ? new anchor.web3.PublicKey(process.env.REACT_APP_FAIR_LAUNCH_ID)\r\n  : undefined;\r\n\r\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\r\n\r\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\r\nconst connection = new anchor.web3.Connection(rpcHost);\r\n\r\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\r\n\r\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\r\n\r\nconst App = () => {\r\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\r\n\r\n  const wallets = useMemo(\r\n    () => [getPhantomWallet(), getSolflareWallet(), getSolletWallet()],\r\n    [],\r\n  );\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ConnectionProvider endpoint={endpoint}>\r\n        <WalletProvider wallets={wallets} autoConnect>\r\n          <WalletDialogProvider>\r\n            <ConfettiProvider>\r\n              <Home\r\n                candyMachineId={candyMachineId}\r\n                fairLaunchId={fairLaunchId}\r\n                connection={connection}\r\n                startDate={startDateSeed}\r\n                txTimeout={txTimeout}\r\n                rpcHost={rpcHost}\r\n              />\r\n            </ConfettiProvider>\r\n          </WalletDialogProvider>\r\n        </WalletProvider>\r\n      </ConnectionProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}