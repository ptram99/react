{"ast":null,"code":"import'./App.css';import{useMemo}from'react';import Home from'./Home';import*as anchor from'@project-serum/anchor';import{clusterApiUrl}from'@solana/web3.js';import{getPhantomWallet,getSolflareWallet,getSolletWallet}from'@solana/wallet-adapter-wallets';import{ConnectionProvider,WalletProvider}from'@solana/wallet-adapter-react';import{WalletDialogProvider}from'@solana/wallet-adapter-material-ui';import{ThemeProvider,createTheme}from'@material-ui/core';import{ConfettiProvider}from'./confetti';import{jsx as _jsx}from\"react/jsx-runtime\";var theme=createTheme({palette:{type:'dark'}});var candyMachineId=process.env.REACT_APP_CANDY_MACHINE_ID?new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_ID):undefined;var fairLaunchId=process.env.REACT_APP_FAIR_LAUNCH_ID?new anchor.web3.PublicKey(process.env.REACT_APP_FAIR_LAUNCH_ID):undefined;var network=process.env.REACT_APP_SOLANA_NETWORK;var rpcHost=process.env.REACT_APP_SOLANA_RPC_HOST;var connection=new anchor.web3.Connection(rpcHost);var startDateSeed=parseInt(process.env.REACT_APP_CANDY_START_DATE,10);var txTimeout=30000;// milliseconds (confirm this works for your project)\nvar App=function App(){var endpoint=useMemo(function(){return clusterApiUrl(network);},[]);var wallets=useMemo(function(){return[getPhantomWallet(),getSolflareWallet(),getSolletWallet()];},[]);return/*#__PURE__*/_jsx(ThemeProvider,{theme:theme,children:/*#__PURE__*/_jsx(ConnectionProvider,{endpoint:endpoint,children:/*#__PURE__*/_jsx(WalletProvider,{wallets:wallets,autoConnect:true,children:/*#__PURE__*/_jsx(WalletDialogProvider,{children:/*#__PURE__*/_jsx(ConfettiProvider,{children:/*#__PURE__*/_jsx(Home,{candyMachineId:candyMachineId,fairLaunchId:fairLaunchId,connection:connection,startDate:startDateSeed,txTimeout:txTimeout,rpcHost:rpcHost})})})})})});};export default App;","map":{"version":3,"sources":["C:/Users/User/~/metaplex/fair-launch/src/App.tsx"],"names":["useMemo","Home","anchor","clusterApiUrl","getPhantomWallet","getSolflareWallet","getSolletWallet","ConnectionProvider","WalletProvider","WalletDialogProvider","ThemeProvider","createTheme","ConfettiProvider","theme","palette","type","candyMachineId","process","env","REACT_APP_CANDY_MACHINE_ID","web3","PublicKey","undefined","fairLaunchId","REACT_APP_FAIR_LAUNCH_ID","network","REACT_APP_SOLANA_NETWORK","rpcHost","REACT_APP_SOLANA_RPC_HOST","connection","Connection","startDateSeed","parseInt","REACT_APP_CANDY_START_DATE","txTimeout","App","endpoint","wallets"],"mappings":"AAAA,MAAO,WAAP,CACA,OAASA,OAAT,KAAwB,OAAxB,CAEA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CAEA,MAAO,GAAKC,CAAAA,MAAZ,KAAwB,uBAAxB,CACA,OAASC,aAAT,KAA8B,iBAA9B,CAEA,OACEC,gBADF,CAEEC,iBAFF,CAGEC,eAHF,KAIO,gCAJP,CAMA,OACEC,kBADF,CAEEC,cAFF,KAGO,8BAHP,CAKA,OAASC,oBAAT,KAAqC,oCAArC,CACA,OAASC,aAAT,CAAwBC,WAAxB,KAA2C,mBAA3C,CACA,OAASC,gBAAT,KAAiC,YAAjC,C,2CAEA,GAAMC,CAAAA,KAAK,CAAGF,WAAW,CAAC,CACxBG,OAAO,CAAE,CACPC,IAAI,CAAE,MADC,CADe,CAAD,CAAzB,CAMA,GAAMC,CAAAA,cAAc,CAAGC,OAAO,CAACC,GAAR,CAAYC,0BAAZ,CACnB,GAAIjB,CAAAA,MAAM,CAACkB,IAAP,CAAYC,SAAhB,CAA0BJ,OAAO,CAACC,GAAR,CAAYC,0BAAtC,CADmB,CAEnBG,SAFJ,CAIA,GAAMC,CAAAA,YAAY,CAAGN,OAAO,CAACC,GAAR,CAAYM,wBAAZ,CACjB,GAAItB,CAAAA,MAAM,CAACkB,IAAP,CAAYC,SAAhB,CAA0BJ,OAAO,CAACC,GAAR,CAAYM,wBAAtC,CADiB,CAEjBF,SAFJ,CAIA,GAAMG,CAAAA,OAAO,CAAGR,OAAO,CAACC,GAAR,CAAYQ,wBAA5B,CAEA,GAAMC,CAAAA,OAAO,CAAGV,OAAO,CAACC,GAAR,CAAYU,yBAA5B,CACA,GAAMC,CAAAA,UAAU,CAAG,GAAI3B,CAAAA,MAAM,CAACkB,IAAP,CAAYU,UAAhB,CAA2BH,OAA3B,CAAnB,CAEA,GAAMI,CAAAA,aAAa,CAAGC,QAAQ,CAACf,OAAO,CAACC,GAAR,CAAYe,0BAAb,CAA0C,EAA1C,CAA9B,CAEA,GAAMC,CAAAA,SAAS,CAAG,KAAlB,CAAyB;AAEzB,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CAChB,GAAMC,CAAAA,QAAQ,CAAGpC,OAAO,CAAC,iBAAMG,CAAAA,aAAa,CAACsB,OAAD,CAAnB,EAAD,CAA+B,EAA/B,CAAxB,CAEA,GAAMY,CAAAA,OAAO,CAAGrC,OAAO,CACrB,iBAAM,CAACI,gBAAgB,EAAjB,CAAqBC,iBAAiB,EAAtC,CAA0CC,eAAe,EAAzD,CAAN,EADqB,CAErB,EAFqB,CAAvB,CAKA,mBACE,KAAC,aAAD,EAAe,KAAK,CAAEO,KAAtB,uBACE,KAAC,kBAAD,EAAoB,QAAQ,CAAEuB,QAA9B,uBACE,KAAC,cAAD,EAAgB,OAAO,CAAEC,OAAzB,CAAkC,WAAW,KAA7C,uBACE,KAAC,oBAAD,wBACE,KAAC,gBAAD,wBACE,KAAC,IAAD,EACE,cAAc,CAAErB,cADlB,CAEE,YAAY,CAAEO,YAFhB,CAGE,UAAU,CAAEM,UAHd,CAIE,SAAS,CAAEE,aAJb,CAKE,SAAS,CAAEG,SALb,CAME,OAAO,CAAEP,OANX,EADF,EADF,EADF,EADF,EADF,EADF,CAoBD,CA5BD,CA8BA,cAAeQ,CAAAA,GAAf","sourcesContent":["import './App.css';\r\nimport { useMemo } from 'react';\r\n\r\nimport Home from './Home';\r\n\r\nimport * as anchor from '@project-serum/anchor';\r\nimport { clusterApiUrl } from '@solana/web3.js';\r\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\r\nimport {\r\n  getPhantomWallet,\r\n  getSolflareWallet,\r\n  getSolletWallet,\r\n} from '@solana/wallet-adapter-wallets';\r\n\r\nimport {\r\n  ConnectionProvider,\r\n  WalletProvider,\r\n} from '@solana/wallet-adapter-react';\r\n\r\nimport { WalletDialogProvider } from '@solana/wallet-adapter-material-ui';\r\nimport { ThemeProvider, createTheme } from '@material-ui/core';\r\nimport { ConfettiProvider } from './confetti';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n});\r\n\r\nconst candyMachineId = process.env.REACT_APP_CANDY_MACHINE_ID\r\n  ? new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_ID)\r\n  : undefined;\r\n\r\nconst fairLaunchId = process.env.REACT_APP_FAIR_LAUNCH_ID\r\n  ? new anchor.web3.PublicKey(process.env.REACT_APP_FAIR_LAUNCH_ID)\r\n  : undefined;\r\n\r\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\r\n\r\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\r\nconst connection = new anchor.web3.Connection(rpcHost);\r\n\r\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\r\n\r\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\r\n\r\nconst App = () => {\r\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\r\n\r\n  const wallets = useMemo(\r\n    () => [getPhantomWallet(), getSolflareWallet(), getSolletWallet()],\r\n    [],\r\n  );\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ConnectionProvider endpoint={endpoint}>\r\n        <WalletProvider wallets={wallets} autoConnect>\r\n          <WalletDialogProvider>\r\n            <ConfettiProvider>\r\n              <Home\r\n                candyMachineId={candyMachineId}\r\n                fairLaunchId={fairLaunchId}\r\n                connection={connection}\r\n                startDate={startDateSeed}\r\n                txTimeout={txTimeout}\r\n                rpcHost={rpcHost}\r\n              />\r\n            </ConfettiProvider>\r\n          </WalletDialogProvider>\r\n        </WalletProvider>\r\n      </ConnectionProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}